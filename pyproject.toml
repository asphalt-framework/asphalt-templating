[build-system]
requires = [
    "setuptools >= 64",
    "setuptools_scm >= 6.4"
]
build-backend = "setuptools.build_meta"

[project]
name = "asphalt-templating"
description = "Templating component for the Asphalt framework"
readme = "README.rst"
authors = [{name = "Alex GrÃ¶nholm", email = "alex.gronholm@nextday.fi"}]
license = {text = "Apache License 2.0"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Text Processing :: General",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">= 3.8"
dependencies = [
    "asphalt ~= 4.8",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/asphalt-framework/asphalt-templating"

[project.optional-dependencies]
django = ["Django >= 1.9.0"]
mako = ["Mako >= 1.0.1"]
jinja2 = ["Jinja2 >= 2.7.3"]
tornado = ["tornado >= 4.3.0"]
test = [
    "anyio[trio] >= 4.1",
    "asphalt-templating[django,mako,jinja2,tornado]",
    "coverage >= 7",
    "pytest >= 7",
]
doc = [
    "asphalt-templating[django,mako,jinja2,tornado]",
    "Sphinx >= 7.0",
    "sphinx_rtd_theme >= 1.3.0",
    "sphinx-autodoc-typehints >= 1.22",
]

[project.entry-points."asphalt.components"]
templating = "asphalt.templating.component:TemplatingComponent"

[project.entry-points."asphalt.templating.renderers"]
django = "asphalt.templating.renderers.django:DjangoRenderer"
jinja2 = "asphalt.templating.renderers.jinja2:Jinja2Renderer"
mako = "asphalt.templating.renderers.mako:MakoRenderer"
tornado = "asphalt.templating.renderers.tornado:TornadoRenderer"

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.ruff.lint]
select = [
    "ASYNC",        # flake8-async
    "E", "F", "W",  # default Flake8
    "G",            # flake8-logging-format
    "I",            # isort
    "ISC",          # flake8-implicit-str-concat
    "PGH",          # pygrep-hooks
    "RUF100",       # unused noqa (yesqa)
    "UP",           # pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["asphalt.templating"]

[tool.pytest.ini_options]
addopts = "-rsx --tb=short"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true

[tool.coverage.run]
source = ["asphalt.templating"]
relative_files = true
branch = true

[tool.coverage.report]
show_missing = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39, py310, py311, pypy3
skip_missing_interpreters = true
isolated_build = true

[testenv]
extras = test
commands = python -m pytest {posargs}

[testenv:docs]
extras = doc
commands = sphinx-build docs build/sphinx
"""
